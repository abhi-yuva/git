Git Commands:

1. git init
2. git clone 
3. git pull
4. git add
5. git commit -m "Commit Message"
6. git push
7. git status - to see in which particular area our files are exist
8. git log -  to see logs in your local repository
9. git log --oneline -  to see short description of your commits we use this command
10. git diff -  it will show you the diffences/modification done on you working area
11. git show - it is used to see a breif information of your commits
12. git restore - to move the changes from stating area to working tree/to discard the complete changes
13. git branch - to create a branch in repository
        git branch <branch_name>
14. git checkout - to move from one branch/commit to another branch/commit
        1. to move from one branch to another branch
                git checkout <branch_name>
        2. to move from one commit to another commit
                git checkout <commit_id>

    there are 2 way to checkout.
    1. directly checkout to the branch after creating the branch
                git checkout <branch_name>
    2. create the branch and checkout to the branch paralelly
                git checkout -b <branch_name>










git add - can be done in different ways

you can add all the files modifed or created or deleted into staging area from working tree/area

git add . -  here (.)Dot represents to save all the files which are there in current repository
git add file-name

git push - to push changes from your local repository to remote repository

1. directly to git push
2. do git push with the git hub repository url
3. do git push to a specific head/branch

git push origin HEAD:[branch-name]
git push --set-upstream origin [branch-name]

3 branches

1. master
2. feature
3. test


git log - it will give you the description of the changes you have done
it will contain the following things

1. Long commit ID
2. Owner information
3. Commit Message

git log --oneline -  it will show the following things
 
1. short commit ID which containg 7 characters
2. commit message


git diff: follow the below command to see the differences between 2 commits

git diff <commit1> <commit2>

to see differences between multiple commits follow the below command
git diff <startcommit>..<endcommit>


git restore: follow the below command

to get the changes from stating area to working tree
git restore --staged <file_name>

to discard the changes in working tree follow the below command
git restore <file_name>


git checkout: 





Terms:

Merge conflicts